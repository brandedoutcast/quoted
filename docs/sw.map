{"version":3,"sources":["sw.js"],"names":["cacheName","assets","cacheResponse","event","response","ok","caches","open","then","cache","put","request","clone","Error","statusText","self","addEventListener","waitUntil","addAll","keys","Promise","all","map","key","delete","url","respondWith","fetch","res","catch","match","r"],"mappings":";AAAA,IAAMA,EAAY,sBACdC,EAAS,CACL,KACA,aACA,aACA,YACA,oBACA,oBACA,qDAoCR,SAASC,EAAcC,EAAOC,GACtBA,GAAAA,EAASC,GACFC,OAAAA,OAAOC,KAAKP,GAAWQ,KAAK,SAAAC,GAASA,OAAAA,EAAMC,IAAIP,EAAMQ,QAASP,EAASQ,WAAUJ,KAAK,WAAMJ,OAAAA,IAE7FS,MAAAA,MAAMT,EAASU,YArC7BC,KAAKC,iBAAiB,UAAW,SAAAb,GAC7BA,EAAMc,UACFX,OAAOC,KAAKP,GAAWQ,KAAK,SAAAC,GAASA,OAAAA,EAAMS,OAAOjB,QAI1Dc,KAAKC,iBAAiB,WAAY,SAAAb,GAC9BA,OAAAA,EAAMc,UACFX,OAAOa,OAAOX,KAAK,SAAAW,GACfC,OAAAA,QAAQC,IAAIF,EAAKG,IAAI,SAAAC,GACbA,GAAAA,IAAQvB,EACDM,OAAAA,OAAOkB,OAAOD,WAOzCR,KAAKC,iBAAiB,QAAS,SAAAb,GACD,0EAAtBA,EAAMQ,QAAQc,IACdtB,EAAMuB,YACFC,MAAMxB,EAAMQ,SACPH,KAAK,SAAAoB,GAAO1B,OAAAA,EAAcC,EAAOyB,KACjCC,MAAM,WAAMvB,OAAAA,OAAOwB,MAAM3B,EAAMQ,SAASH,KAAK,SAAAuB,GAAKA,OAAAA,OAG3D5B,EAAMuB,YACFpB,OAAOwB,MAAM3B,EAAMQ,SACdH,KAAK,SAAAJ,GAAYA,OAAAA,GAAYuB,MAAMxB,EAAMQ,SAASH,KAAK,SAAAoB,GAAO1B,OAAAA,EAAcC,EAAOyB","file":"sw.map","sourceRoot":"..","sourcesContent":["const cacheName = \"quoted-cache-v0.1.0\",\r\n    assets = [\r\n        \"./\",\r\n        \"index.html\",\r\n        \"style.styl\",\r\n        \"script.js\",\r\n        \"img/quoted192.png\",\r\n        \"img/quoted512.png\",\r\n        \"https://fonts.googleapis.com/css?family=Quicksand\"\r\n    ]\r\n\r\nself.addEventListener(\"install\", event => {\r\n    event.waitUntil(\r\n        caches.open(cacheName).then(cache => cache.addAll(assets))\r\n    )\r\n})\r\n\r\nself.addEventListener(\"activate\", event =>\r\n    event.waitUntil(\r\n        caches.keys().then(keys =>\r\n            Promise.all(keys.map(key => {\r\n                if (key !== cacheName) {\r\n                    return caches.delete(key)\r\n                }\r\n            }))\r\n        )\r\n    )\r\n)\r\n\r\nself.addEventListener(\"fetch\", event => {\r\n    if (event.request.url === \"https://raw.githubusercontent.com/rohith/quoted/master/data/quotes.md\") {\r\n        event.respondWith(\r\n            fetch(event.request)\r\n                .then(res => cacheResponse(event, res))\r\n                .catch(() => caches.match(event.request).then(r => r))\r\n        )\r\n    } else {\r\n        event.respondWith(\r\n            caches.match(event.request)\r\n                .then(response => response || fetch(event.request).then(res => cacheResponse(event, res)))\r\n        )\r\n    }\r\n})\r\n\r\nfunction cacheResponse(event, response) {\r\n    if (response.ok) {\r\n        return caches.open(cacheName).then(cache => cache.put(event.request, response.clone())).then(() => response)\r\n    } else {\r\n        throw Error(response.statusText)\r\n    }\r\n}"]}