{"version":3,"sources":["sw.js"],"names":["cacheName","assets","fetchReq","request","fetch","then","netRes","resClone","clone","ok","Error","response","statusText","caches","open","cache","put","self","addEventListener","event","waitUntil","addAll","keys","Promise","all","map","key","delete","url","respondWith","match","cacheResponse","fetchResponse"],"mappings":";AAAA,IAAMA,EAAY,sBACdC,EAAS,CACL,KACA,aACA,aACA,YACA,oBACA,oBACA,oDACA,yEAsCR,SAASC,EAASC,GACPC,OAAAA,MAAMD,GAASE,KAAK,SAAAC,GACnBC,IAAAA,EAAWD,EAAOE,QAClBD,IAAAA,EAASE,GAGHC,MAAAA,MAAMC,SAASC,YAElBN,OAJHO,OAAOC,KAAKd,GAAWK,KAAK,SAAAU,GAASA,OAAAA,EAAMC,IAAIb,EAASI,KAIrDD,IA3CfW,KAAKC,iBAAiB,UAAW,SAAAC,GAC7BA,EAAMC,UACFP,OAAOC,KAAKd,GAAWK,KAAK,SAAAU,GAASA,OAAAA,EAAMM,OAAOpB,QAI1DgB,KAAKC,iBAAiB,WAAY,SAAAC,GAC9BA,OAAAA,EAAMC,UACFP,OAAOS,OAAOjB,KAAK,SAAAiB,GACfC,OAAAA,QAAQC,IAAIF,EAAKG,IAAI,SAAAC,GACbA,GAAAA,IAAQ1B,EACDa,OAAAA,OAAOc,OAAOD,WAOzCT,KAAKC,iBAAiB,QAAS,SAAAC,GACvBhB,IAAAA,EAAUgB,EAAMhB,QACA,0EAAhBA,EAAQyB,IACRT,EAAMU,YACFhB,OAAOiB,MAAM3B,GACRE,KAAK,SAAA0B,GACEC,IAAAA,EAAgB9B,EAASC,GACtB4B,OAAAA,GAAiBC,KAIpCb,EAAMU,YACFhB,OAAOiB,MAAM3B,GAASE,KAAK,SAAA0B,GAAiBA,OAAAA,GAAiB7B,EAASC","file":"sw.map","sourceRoot":"..","sourcesContent":["const cacheName = \"quoted-cache-v0.1.2\",\r\n    assets = [\r\n        \"./\",\r\n        \"index.html\",\r\n        \"style.styl\",\r\n        \"script.js\",\r\n        \"img/quoted192.png\",\r\n        \"img/quoted512.png\",\r\n        \"https://fonts.googleapis.com/css?family=Quicksand\",\r\n        \"https://raw.githubusercontent.com/rohith/quoted/master/data/quotes.md\"\r\n    ]\r\n\r\nself.addEventListener(\"install\", event => {\r\n    event.waitUntil(\r\n        caches.open(cacheName).then(cache => cache.addAll(assets))\r\n    )\r\n})\r\n\r\nself.addEventListener(\"activate\", event =>\r\n    event.waitUntil(\r\n        caches.keys().then(keys =>\r\n            Promise.all(keys.map(key => {\r\n                if (key !== cacheName) {\r\n                    return caches.delete(key)\r\n                }\r\n            }))\r\n        )\r\n    )\r\n)\r\n\r\nself.addEventListener(\"fetch\", event => {\r\n    let request = event.request\r\n    if (request.url === \"https://raw.githubusercontent.com/rohith/quoted/master/data/quotes.md\") {\r\n        event.respondWith(\r\n            caches.match(request)\r\n                .then(cacheResponse => {\r\n                    let fetchResponse = fetchReq(request)\r\n                    return cacheResponse || fetchResponse\r\n                })\r\n        )\r\n    } else {\r\n        event.respondWith(\r\n            caches.match(request).then(cacheResponse => cacheResponse || fetchReq(request))\r\n        )\r\n    }\r\n})\r\n\r\nfunction fetchReq(request) {\r\n    return fetch(request).then(netRes => {\r\n        let resClone = netRes.clone()\r\n        if (resClone.ok) {\r\n            caches.open(cacheName).then(cache => cache.put(request, resClone))\r\n        } else {\r\n            throw Error(response.statusText)\r\n        }\r\n        return netRes\r\n    })\r\n}\r\n"]}