{"version":3,"sources":["script.js"],"names":["QuoteFactory","mainElm","document","querySelector","quoteDiv","getElementById","controlsDiv","showControls","quoteDuration","quotesDataURL","fadeDuration","colors","sort","Math","random","setupUtils","bindEvents","fetchQuotes","registerSW","Array","prototype","nextItem","currentItem","currentIndex","indexOf","length","navigator","onclick","shareQuote","fetch","then","response","text","data","quotes","split","map","s","trim","filter","classList","toggle","setTimeout","changeQuote","remove","style","display","setInterval","serviceWorker","register","console","log","catch","e","error","JSON","stringify","share","title","innerText","url","window","location","origin","changeBGColor","currentColor","backgroundColor","nextIndex","addEventListener","boot"],"mappings":"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","file":"script.cb608f5f.map","sourceRoot":"..","sourcesContent":["class QuoteFactory {\r\n    constructor() {\r\n        this.mainElm = document.querySelector(\"main\")\r\n        this.quoteDiv = document.getElementById(\"quote\")\r\n        this.controlsDiv = document.getElementById(\"controls\")\r\n        this.showControls = false\r\n        this.quoteDuration = 9500\r\n        this.quotesDataURL = \"https://raw.githubusercontent.com/rohith/quoted/master/data/quotes.md\"\r\n        this.fadeDuration = 500 // comes from style.styl with opacity transition time\r\n        this.colors = [\r\n            \"rgb(44, 62, 80)\",\r\n            \"rgb(192, 57, 43)\",\r\n            \"rgb(211, 84, 0)\",\r\n            \"rgb(22, 160, 133)\",\r\n            \"rgb(39, 174, 96)\",\r\n            \"rgb(41, 128, 185)\",\r\n            \"rgb(142, 68, 173)\"\r\n        ].sort(() => Math.random() - 0.5)\r\n    }\r\n\r\n    boot() {\r\n        this.setupUtils()\r\n        this.bindEvents()\r\n        this.fetchQuotes()\r\n        this.registerSW()\r\n    }\r\n\r\n    setupUtils() {\r\n        Array.prototype.nextItem = function (currentItem) {\r\n            let currentIndex = this.indexOf(currentItem)\r\n            return currentIndex < 0 || currentIndex === this.length - 1 ? this[0] : this[currentIndex + 1]\r\n        }\r\n    }\r\n\r\n    bindEvents() {\r\n        if ((\"share\" in navigator)) {\r\n            this.showControls = true\r\n            document.getElementById(\"share\").onclick = this.shareQuote\r\n        }\r\n    }\r\n\r\n    fetchQuotes() {\r\n        fetch(this.quotesDataURL)\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                this.quotes = data.split(\"\\n\").map(s => s.trim()).filter(s => s).sort(() => Math.random() - 0.5)\r\n                this.quoteDiv.classList.toggle(\"fade\")\r\n                setTimeout(() => {\r\n                    this.changeQuote()\r\n                    if (this.showControls) {\r\n                        this.controlsDiv.classList.remove(\"fade\")\r\n                    } else {\r\n                        this.controlsDiv.style.display = \"none\"\r\n                    }\r\n                    setInterval(() => this.changeQuote(), this.quoteDuration)\r\n                }, this.fadeDuration);\r\n            })\r\n    }\r\n\r\n    registerSW() {\r\n        if (\"serviceWorker\" in navigator) {\r\n            navigator.serviceWorker.register(\"sw.js\")\r\n                .then(() => console.log(\"Service Worker Registered\"))\r\n                .catch(e => console.error(`Service Worker not Registered due to ${JSON.stringify(e)}`))\r\n        }\r\n    }\r\n\r\n    shareQuote() {\r\n        navigator.share({\r\n            title: document.title,\r\n            text: document.getElementById(\"quote\").innerText,\r\n            url: window.location.origin\r\n        }).catch(error => console.log(\"Error Sharing:\", error))\r\n    }\r\n\r\n    changeQuote() {\r\n        this.quoteDiv.innerText = this.quotes.nextItem(this.quoteDiv.innerText)\r\n        this.changeBGColor()\r\n        this.quoteDiv.classList.toggle(\"fade\")\r\n        setTimeout(() => {\r\n            this.quoteDiv.classList.toggle(\"fade\")\r\n        }, this.quoteDuration - this.fadeDuration)\r\n    }\r\n\r\n    changeBGColor() {\r\n        let currentColor = this.mainElm.style.backgroundColor,\r\n            currentIndex = this.colors.indexOf(currentColor),\r\n            nextIndex = currentIndex >= 0 ? (currentIndex < this.colors.length - 1 ? currentIndex + 1 : 0) : 0\r\n\r\n        this.mainElm.style.backgroundColor = this.colors[nextIndex]\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    new QuoteFactory().boot()\r\n})"]}